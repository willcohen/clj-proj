{:paths ["src" "src/clj" "src/cljc" "resources" "target"
         "src/clj/net/willcohen/proj/impl" ; These specific paths are redundant if src/clj and src/cljc are included, but harmless.
         "src/cljc/net/willcohen/proj"] ; These specific paths are redundant if src/clj and src/cljc are included, but harmless.
 :deps {org.clojure/clojure {:mvn/version "1.12.0"}
        org.clojure/clojurescript {:mvn/version "1.11.132"}
        cnuernber/dtype-next {:mvn/version "10.142"}
        techascent/tech.resource {:mvn/version "5.08"}
        org.graalvm.js/js-language {:mvn/version "24.2.2"}
        org.graalvm.polyglot/polyglot {:mvn/version "24.2.2"}
        org.graalvm.wasm/wasm-language {:mvn/version "24.2.2"}
        net.java.dev.jna/jna {:mvn/version "5.17.0"}
        org.clojure/tools.logging {:mvn/version "1.3.0"}}

 :aliases {;; Alias for running Clojure JVM tests
           :test {:extra-paths ["test" "test/cljc"]
                  :extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}
                               org.clojure/test.check {:mvn/version "1.1.1"}}
                  :main-opts ["-m" "cognitect.test-runner"]
                  :exec-fn cognitect.test-runner.api/test}
           :build {:deps {io.github.clojure/tools.build
                          {:git/tag "v0.10.9" :git/sha "e405aac"}}
                   :ns-default build}
           :deploy {:extra-deps {slipset/deps-deploy {:mvn/version "RELEASE"}}
                    :exec-fn deps-deploy.deps-deploy/deploy
                    :exec-args {:installer :remote
                                :sign-releases? false
                                :artifact "target/proj-0.1.0-alpha2.jar"}}}

 :jvm-opts ["--add-modules" "jdk.incubator.foreign,jdk.incubator.vector"
            "--enable-native-access=ALL-UNNAMED"]}
